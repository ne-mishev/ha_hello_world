#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2     #Log configuration
 
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000                
    user        haproxy             #Haproxy running under user and group "haproxy"
    group       haproxy
    daemon
 
    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
 
#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
 
#---------------------------------------------------------------------
#HAProxy Monitoring Config
#---------------------------------------------------------------------
listen haproxy3-monitoring *:8080                #Haproxy Monitoring run on port 8080
    mode http
    option forwardfor
    option httpclose
    stats enable
    stats show-legends
    stats refresh 5s
    stats uri /stats                             #URL for HAProxy monitoring
    stats realm Haproxy\ Statistics
    stats auth user:nginx            #User and Password for login to the monitoring dashboard
    stats admin if TRUE
    default_backend {{ letsencrypt_domain }}-backend                    #This is optionally for monitoring backend

#---------------------------------------------------------------------
# FrontEnd Configuration
#---------------------------------------------------------------------
#frontend helloworld
#    bind *:80
#    option http-server-close
#    option forwardfor
#    default_backend app-helloworld
frontend helloworld-http
   bind *:80
   # acl letsencrypt-acl path_beg /.well-known/acme-challenge/
   # use_backend letsencrypt-backend if letsencrypt-acl
   acl is_certbot path_beg -i /.well-known/acme-challenge/
   option http-server-close
   option forwardfor 
   use_backend certbot if is_certbot
{% if good_to_go == "https" %}
   default_backend redirect-backend
{% else %}
    default_backend {{ letsencrypt_domain }}-backend
{% endif %}
backend certbot
    log global
    mode http
    server certbot 127.0.0.1:8000

{% if good_to_go == "https" %}
backend redirect-backend
    redirect scheme https 
{% endif %}
#---------------------------------------------------------------------
# BackEnd roundrobin as balance algorithm
#---------------------------------------------------------------------
#backend app-helloworld
#    balance roundrobin                                     #Balance algorithm
#    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost    #Check the server application is up and healty - 200 status code
#    server web-1 10.0.10.11:80 check                 #Nginx1 
#    server web-2 10.0.10.12:80 check                 #Nginx2
{% if good_to_go == "https" %}
frontend helloworld-https
    option forwardfor
    option http-server-close
    option httpclose

    bind *:443 ssl {% for cert in haproxy_certs %}crt {{ cert}} {% endfor %}

    http-response set-header Strict-Transport-Security max-age=16000000;\ includeSubDomains;\ preload
    http-response set-header X-Frame-Options DENY
    {% for domain in haproxy_domains %}

    use_backend {{ domain.name }}-backend if { ssl_fc_sni {{ domain.name }} }
    {% endfor %}


{% endif %}

{% for domain in haproxy_domains %}
backend {{ domain.name }}-backend
    balance roundrobin                                     #Balance algorithm
    option httpchk HEAD / HTTP/1.1\r\nHost:\ localhost    #Check the server application is up and healty - 200 status code
    server web-1 10.0.10.11:80 check                 #Nginx1 
    server web-2 10.0.10.12:80 check                 #Nginx2
{% endfor %}
